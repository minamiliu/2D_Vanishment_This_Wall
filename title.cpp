//******************************************************************************
//
// タイトル:		タイトルの流れ管理処理
// プログラム名:	title.cpp
// 作成者:			HAL東京ゲーム学科　劉南宏
//
//******************************************************************************


/*******************************************************************************
* インクルードファイル
*******************************************************************************/

#include "title.h"
#include "title_BG.h"
#include "input.h"
#include "fade.h"
#include "title_menu.h"
#include "title_bomb.h"
#include "sound.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


/*******************************************************************************
* 構造体定義
*******************************************************************************/

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/


/*******************************************************************************
* グローバル変数
*******************************************************************************/


/*******************************************************************************
関数名:	void InitTitle(void)
引数:	なし
戻り値:	なし
説明:	ゲームタイトルの初期化処理
*******************************************************************************/
void InitTitle(void)
{
	InitTitleBG();
	InitTitleMenu();
	InitTitleBomb();
}

/*******************************************************************************
関数名:	void UpdateTitle(void)
引数:	なし
戻り値:	なし
説明:	ゲームタイトルの更新関数
*******************************************************************************/
void UpdateTitle(void)
{
	
	UpdateTitleMenu();
	UpdateTitleBomb();

	if(GetKeyboardTrigger(DIK_RETURN) || GetGamePadTrigger( 0, BUTTON_B))
	{
		int titleMenu = GetTitleMenu();

		//SE
		SetSE(SOUND_LABEL_SE_OK);

		switch(titleMenu)
		{
			case 0:
				FadeOutToNext(MODE_CHARA);
				SetGameMode(GAME_COOPERATE); 
				break;
			case 1:
				FadeOutToNext(MODE_CHARA);
				SetGameMode(GAME_BATTLE);
				break;
			case 2:
				//PostQuitMessage(0);
				SetGameMode(GAME_COOPERATE);
				FadeOutToNext(MODE_RESULT);
				break;
		}
	}

}

/*******************************************************************************
関数名:	void DrawTitle(void)
引数:	なし
戻り値:	なし
説明:	ゲームタイトルの描画関数
*******************************************************************************/
void DrawTitle(void)
{
	DrawTitleBG();
	DrawTitleMenu();
	DrawTitleBomb();
}
/*******************************************************************************
関数名:	void UninitTitle(void)
引数:	なし
戻り値:	なし
説明:	ゲームタイトルの開放関数
*******************************************************************************/
void UninitTitle(void)
{
	UninitTitleBG();
	UninitTitleMenu();
	UninitTitleBomb();
}


